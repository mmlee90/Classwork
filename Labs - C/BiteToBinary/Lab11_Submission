Script started on Mon 28 Nov 2016 10:50:35 PM EST
bash-4.1$ uname -a
Linux zeus-0 2.6.32-642.6.2.el6.x86_64 #1 SMP Wed Oct 26 06:52:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
bash-4.1$ ls
Lab11_mlee58_204.c  Lab11_Submission  makefile
bash-4.1$ cat Lab11_mlee58_204.c
//Michelle Lee G00585387
//CS 262, Lab 204
//Lab 11

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define BYTETOBINARYPATTERN "%d%d%d%d%d%d%d%d"

#define BYTETOBINARY(byte)  \
  (byte & 0x80 ? 1 : 0), \
  (byte & 0x40 ? 1 : 0), \
  (byte & 0x20 ? 1 : 0), \
  (byte & 0x10 ? 1 : 0), \
  (byte & 0x08 ? 1 : 0), \
  (byte & 0x04 ? 1 : 0), \
  (byte & 0x02 ? 1 : 0), \
  (byte & 0x01 ? 1 : 0) 

#define PRINTBIN(x) printf(BYTETOBINARYPATTERN, BYTETOBINARY(x));

void setlsbs(unsigned char *p, unsigned char b0)
{
	int i;
	for(i = 0; i < 8; i++)
	{
		(p[i] & ~1) | b0;
	}


}
unsigned char getlsbs(unsigned char *p)
{
	int lsb, i, j;
	unsigned char byte[9] = "";
	for(i = 0; i < 8; i++)
	{
		for(j = 0; j < 8; j++)
		{
			lsb = j & 1; //rightmost bit will be assigned to lsb
		}
		byte[9-(i+1)] = lsb;
	}
	
	return byte;

}

int main(int argc, char *argv)
{
	srandom(argv[1]);//first argument is random number seed
	unsigned char *p[8];
	int i;
	for(i = 0; i < 8; i++)
	{
		p[i] = random()%256;
	}
	unsigned char byte0 = random();
	for(i = 0; i < 8; i++)//printing values found in array p in decimal format
	{
		printf("%s\n",p[i]);
	}
	for(i = 0; i < 8; i++)//printing array p in binary
        {
                PRINTBIN(*p[i]);
		printf("\n");
        }

	printf("%c", byte0);//printing byte0 in decimal the binary
	PRINTBIN(byte0);
	printf("\n");

	setlsbs(*p, byte0);
	for(i = 0; i < 8; i++)
        {
                printf(p[i]);
        }
	unsigned char result = getlsbs(*p);
	printf("%c\n", result);//print result of call to getlsbs
	PRINTBIN(result);
	printf("\n");
}
bash-4.1$ make Lab11_mlee58_204 Lab11_mlee58_204.c
cc -Wall -g    Lab11_mlee58_204.c   -o Lab11_mlee58_204
Lab11_mlee58_204.c: In function â€˜setlsbsâ€™:
Lab11_mlee58_204.c:27: warning: statement with no effect
Lab11_mlee58_204.c: In function â€˜getlsbsâ€™:
Lab11_mlee58_204.c:45: warning: return makes integer from pointer without a cast
Lab11_mlee58_204.c:45: warning: function returns address of local variable
Lab11_mlee58_204.c: At top level:
Lab11_mlee58_204.c:49: warning: second argument of â€˜mainâ€™ should be â€˜char **â€™
Lab11_mlee58_204.c: In function â€˜mainâ€™:
Lab11_mlee58_204.c:56: warning: assignment makes pointer from integer without a cast
Lab11_mlee58_204.c:76: warning: pointer targets in passing argument 1 of â€˜printfâ€™ differ in signedness
/usr/include/stdio.h:361: note: expected â€˜const char * __restrict__â€™ but argument is of type â€˜unsigned char *â€™
Lab11_mlee58_204.c:82: warning: control reaches end of non-void function
make: Nothing to be done for `Lab11_mlee58_204.c'.
bash-4.1$ Lab11_mlee58_204 1
Segmentation fault
bash-4.1$ Lab11_mlee58_204 1[K2
Segmentation fault
bash-4.1$ Lab11_mlee58_204 2[K3
Segmentation fault
bash-4.1$ Lab11_mlee58_204 3[K4
Segmentation fault
bash-4.1$ Lab11_mlee58_204 4[K5
Segmentation fault
bash-4.1$ Lab11_mlee58_204 5[K6
Segmentation fault
bash-4.1$ Lab11_mlee58_204 6[K7
Segmentation fault
bash-4.1$ Lab11_mlee58_204 7[K8
Segmentation fault
bash-4.1$ Lab11_mlee58_204 8[K9
Segmentation fault
bash-4.1$ Lab11_mlee58_204 9[K10
Segmentation fault
bash-4.1$ exit

Script done on Mon 28 Nov 2016 10:52:17 PM EST
